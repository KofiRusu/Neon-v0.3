name: Workspace Validation

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run validation daily at 2 AM UTC
    - cron: '0 2 * * *'

env:
  NODE_VERSION: '18'

jobs:
  validate-sync:
    name: Validate Workspace Sync
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 50  # Get enough history to analyze commits
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Validate sync scripts exist
        run: |
          if [ -f "scripts/auto-sync.js" ]; then
            echo "‚úÖ Auto-sync script found"
          else
            echo "‚ùå Auto-sync script missing"
            exit 1
          fi
          
          if [ -f "scripts/handle-conflicts.js" ]; then
            echo "‚úÖ Conflict handler script found"
          else
            echo "‚ùå Conflict handler script missing"
            exit 1
          fi
          
      - name: Validate git hooks
        run: |
          if [ -f ".git/hooks/post-commit" ]; then
            echo "‚úÖ Post-commit hook found"
          else
            echo "‚ö†Ô∏è Post-commit hook missing"
          fi
          
          if [ -f ".git/hooks/post-merge" ]; then
            echo "‚úÖ Post-merge hook found"
          else
            echo "‚ö†Ô∏è Post-merge hook missing"
          fi
          
      - name: Test conflict resolution
        run: |
          echo "üîç Testing conflict resolution script..."
          node ./scripts/handle-conflicts.js
          
      - name: Test auto-sync script (dry run)
        run: |
          echo "üß™ Testing auto-sync script in dry-run mode..."
          node ./scripts/auto-sync.js --dry-run
          
      - name: Analyze commit history
        run: |
          echo "üìä WORKSPACE SYNC METRICS:"
          echo "=========================="
          
          # Count auto-commits
          AUTO_COMMITS=$(git log --oneline --grep="Auto-commit from device" | wc -l)
          echo "ü§ñ Auto-commits: $AUTO_COMMITS"
          
          # Check sync log
          if [ -f ".sync-log.json" ]; then
            SYNC_ENTRIES=$(wc -l < .sync-log.json)
            echo "üìù Sync log entries: $SYNC_ENTRIES"
            
            # Show recent sync activity
            echo ""
            echo "üïí RECENT SYNC ACTIVITY:"
            echo "======================="
            tail -5 .sync-log.json | jq -r '.timestamp + " - " + .message' 2>/dev/null || echo "Unable to parse sync log"
          else
            echo "‚ö†Ô∏è Sync log not found"
          fi
          
          # Validate minimum sync activity
          if [ "$AUTO_COMMITS" -lt 5 ]; then
            echo "‚ùå Insufficient auto-commit activity (minimum: 5, found: $AUTO_COMMITS)"
            exit 1
          else
            echo "‚úÖ Adequate sync activity detected"
          fi
          
      - name: Check for recent conflicts
        run: |
          echo "üîç Checking recent commit history for conflicts..."
          CONFLICT_COMMITS=$(git log --oneline --grep="CONFLICT\|Merge conflict\|resolve conflict" -10 | wc -l)
          
          if [ "$CONFLICT_COMMITS" -gt 0 ]; then
            echo "‚ö†Ô∏è Found $CONFLICT_COMMITS conflict-related commits in recent history"
            git log --oneline --grep="CONFLICT\|Merge conflict\|resolve conflict" -5
          else
            echo "‚úÖ No recent conflict-related commits found"
          fi
          
      - name: Workspace health summary
        run: |
          echo ""
          echo "üè• WORKSPACE HEALTH SUMMARY:"
          echo "============================"
          echo "‚úÖ Sync scripts: Present and functional"
          echo "‚úÖ Conflict resolution: Working"
          echo "‚úÖ Commit automation: Active ($(git log --oneline --grep='Auto-commit from device' | wc -l) auto-commits)"
          echo "‚úÖ Workspace validation: Complete"
          echo ""
          echo "üåü AUTONOMOUS WORKSPACE STATUS: OPERATIONAL" 